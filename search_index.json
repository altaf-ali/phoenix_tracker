[
["index.html", "Phoenix Tracker 1 Introduction 1.1 Getting Started 1.2 Loading Dataset", " Phoenix Tracker 1 Introduction This project analyzes event data from the Phoenix Data Project 1.1 Getting Started Load the necessary packages. library(plyr) library(yaml) library(tidyverse) 1.2 Loading Dataset The phoenix.R script provides a function that simplifies downloading and loading the dataset. We set the start date to the beginning of the year and load the dataset. The phoenix_load() function downloads the dataset if necessary. source(&#39;R/phoenix.R&#39;) config &lt;- yaml.load_file(&quot;config.yml&quot;) events &lt;- phoenix_load(config, start_date = &quot;2017-01-01&quot;) Let’s see what’s in the dataset str(events) ## &#39;data.frame&#39;: 188644 obs. of 26 variables: ## $ EventID : chr &quot;2867898_v1.3.0&quot; &quot;2867899_v1.3.0&quot; &quot;2867900_v1.3.0&quot; &quot;2867901_v1.3.0&quot; ... ## $ Date : Date, format: &quot;2017-01-02&quot; &quot;2016-12-23&quot; ... ## $ Year : int 2017 2016 2016 2017 2017 2017 2017 2017 2017 2017 ... ## $ Month : int 1 12 12 1 1 1 1 1 1 1 ... ## $ Day : int 2 23 29 2 2 2 2 1 1 2 ... ## $ SourceActorFull : chr &quot;COG&quot; &quot;MNCCHE&quot; &quot;IRN&quot; &quot;DEU&quot; ... ## $ SourceActorEntity : chr &quot;COG&quot; &quot;MNC&quot; &quot;IRN&quot; &quot;DEU&quot; ... ## $ SourceActorRole : chr &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... ## $ SourceActorAttribute: chr &quot;&quot; &quot;CHE&quot; &quot;&quot; &quot;&quot; ... ## $ TargetActorFull : chr &quot;MED&quot; &quot;USAGOV&quot; &quot;SYR&quot; &quot;GBR&quot; ... ## $ TargetActorEntity : chr &quot;&quot; &quot;USA&quot; &quot;SYR&quot; &quot;GBR&quot; ... ## $ TargetActorRole : chr &quot;&quot; &quot;GOV&quot; &quot;&quot; &quot;&quot; ... ## $ TargetActorAttribute: chr &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... ## $ EventCode : chr &quot;010&quot; &quot;010&quot; &quot;010&quot; &quot;042&quot; ... ## $ EventRootCode : chr &quot;01&quot; &quot;01&quot; &quot;01&quot; &quot;04&quot; ... ## $ PentaClass : chr &quot;0&quot; &quot;0&quot; &quot;0&quot; &quot;1&quot; ... ## $ GoldsteinScore : num 0 0 0 1.9 -4.4 1.9 0 1 1.9 0 ... ## $ Issues : chr &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... ## $ Lat : num NA 39.8 55.8 51.5 39.9 ... ## $ Lon : num NA -98.5 37.616 -0.126 116.397 ... ## $ LocationName : chr &quot;&quot; &quot;United States&quot; &quot;Moscow&quot; &quot;London&quot; ... ## $ StateName : chr &quot;&quot; &quot;&quot; &quot;Moskva&quot; &quot;England&quot; ... ## $ CountryCode : chr &quot;&quot; &quot;USA&quot; &quot;RUS&quot; &quot;GBR&quot; ... ## $ SentenceID : chr &quot;586a9d7beaae1f0001eec49c_1&quot; &quot;5869ac06dc0402000134e7ef_0&quot; &quot;5869ac72d57de600015a7951_1&quot; &quot;586a3e29172dca00014c31b9_2;586a2f7fe580470001f1b3d6_2;586a36dfc6faa00001190301_3&quot; ... ## $ URLs : chr &quot;http://www.nation.co.ke/news/africa/DR-Congo-set-for-talks-on-implementing-crisis-deal/1066-3504894-k0ud9b/index.html&quot; &quot;http://www.thelocal.ch/20161223/swiss-bank-to-pay-billions-to-settle-securities-disputes&quot; &quot;http://www.jpost.com/Middle-East/Syrian-army-says-countrywide-ceasefire-to-start-midnight-Thursday-476890&quot; &quot;https://in.news.yahoo.com/china-launches-first-freight-train-london-113004033.html;http://www.shanghaidaily.com/nation/China-la&quot;| __truncated__ ... ## $ NewsSources : chr &quot;kenya_nation&quot; &quot;local_switzerland&quot; &quot;jpost_me&quot; &quot;yahoo_india;shanghai_national;india_mint_econpol&quot; ... Show selected columns events %&gt;% select(Date, SourceActorFull, TargetActorFull, EventCode, LocationName) %&gt;% head() ## Date SourceActorFull TargetActorFull EventCode LocationName ## 1 2017-01-02 COG MED 010 ## 2 2016-12-23 MNCCHE USAGOV 010 United States ## 3 2016-12-29 IRN SYR 010 Moscow ## 4 2017-01-02 DEU GBR 042 London ## 5 2017-01-02 CHN HKG 130 Beijing ## 6 2017-01-02 USAELIGOV USAGOV 042 Last Updated: Apr 04, 2017 2:13 AM "],
["activity.html", "2 Activity 2.1 Loading Dataset 2.2 Most Active on 2017-03-18 2.3 Most Active in Last 7 Days 2.4 Most Active in Last 30 Days", " 2 Activity library(plyr) library(cshapes) library(countrycode) library(tidyverse) library(lubridate) library(broom) library(yaml) library(ggrepel) 2.1 Loading Dataset Load Phoenix events and few other things we need for plotting. source(&#39;R/phoenix.R&#39;) config &lt;- yaml.load_file(&quot;config.yml&quot;) events &lt;- phoenix_load(config, &quot;2017-01-01&quot;) country_centroids &lt;- read_csv(config$google$centroids) world_map &lt;- tidy(cshp(as.Date(&quot;2016-06-30&quot;)), region = &quot;COWCODE&quot;) Function for summarizing events. Return value contains a list of nodes and edges reprensenting dyadic events. get_event_summary &lt;- function(events, centroids, period = 0) { events &lt;- events %&gt;% filter(Date &gt;= (max(Date) - days(period))) %&gt;% filter(SourceActorRole == &quot;GOV&quot; &amp; TargetActorRole == &quot;GOV&quot;) nodes &lt;- events %&gt;% mutate(TargetActorEntity = ifelse(SourceActorEntity == TargetActorEntity, NA, TargetActorEntity)) %&gt;% gather(ActorType, ActorEntity, SourceActorEntity, TargetActorEntity) %&gt;% filter(!is.na(ActorEntity), !(ActorEntity == &quot;&quot;)) %&gt;% group_by(ActorEntity) %&gt;% summarize(EventCount = n()) %&gt;% mutate(CountryCode = countrycode(ActorEntity, &quot;iso3c&quot;, &quot;cown&quot;), EventCount) %&gt;% select(CountryCode, Country = ActorEntity, EventCount) %&gt;% left_join(centroids, by = &quot;Country&quot;) %&gt;% arrange(desc(EventCount)) edges &lt;- events %&gt;% filter(!is.na(SourceActorEntity), !(SourceActorEntity == &quot;&quot;), !is.na(TargetActorEntity), !(TargetActorEntity == &quot;&quot;), SourceActorEntity != TargetActorEntity) %&gt;% rowwise() %&gt;% mutate(Dyad = paste(sort(c(SourceActorEntity, TargetActorEntity)), collapse = &quot;-&quot;)) %&gt;% ungroup() %&gt;% group_by(Dyad) %&gt;% summarize(EventCount = n()) %&gt;% ungroup() %&gt;% separate(Dyad, c(&quot;SideA&quot;, &quot;SideB&quot;), &quot;-&quot;, remove = FALSE) %&gt;% mutate(CountryA = countrycode(SideA, &quot;iso3c&quot;, &quot;country.name&quot;), CountryB = countrycode(SideB, &quot;iso3c&quot;, &quot;country.name&quot;)) %&gt;% left_join(centroids, by = c(&quot;SideA&quot; = &quot;Country&quot;)) %&gt;% select(Dyad, SideA, SideB, CountryA, CountryB, EventCount, SideA_Latitude = Latitude, SideA_Longitude = Longitude) %&gt;% left_join(centroids, by = c(&quot;SideB&quot; = &quot;Country&quot;)) %&gt;% select(Dyad, SideA, SideB, CountryA, CountryB, EventCount, SideA_Latitude, SideA_Longitude, SideB_Latitude = Latitude, SideB_Longitude = Longitude) %&gt;% arrange(desc(EventCount)) return(list(nodes = nodes, edges = edges)) } Function for plotting activity on a map. plot_activity &lt;- function(map, event_summary) { map &lt;- map %&gt;% mutate(id = as.numeric(id)) %&gt;% left_join(event_summary$nodes, by = c(&quot;id&quot; = &quot;CountryCode&quot;)) ggplot(map) + geom_map(map = map, aes(map_id = id, fill = EventCount), color = &quot;gray&quot;, size = 0.5) + scale_fill_distiller(name = &quot;Event Count&quot;, palette = &quot;Blues&quot;, direction = 1, na.value = &quot;white&quot;) + expand_limits(x = map$long, y = map$lat) + coord_cartesian() + geom_point(aes(x = Longitude, y = Latitude), data = event_summary$nodes, size = 0.5) + geom_curve(aes(x = SideA_Longitude, y = SideA_Latitude, xend = SideB_Longitude, yend = SideB_Latitude), data = event_summary$edges, size = 0.2, alpha = 0.5, color = &quot;red&quot;) + geom_text_repel(aes(x = Longitude, y = Latitude, label = CountryName), data = head(event_summary$nodes, 10), force = 0.1, size = 3, fontface = &quot;bold&quot;) + theme_minimal() + theme(legend.position = &quot;bottom&quot;, legend.key.width = unit(5, &quot;line&quot;), axis.title = element_blank(), axis.text = element_blank(), panel.grid = element_blank()) } This function simply formats the top 10 rows from the dataset in a pretty table. show_top10 &lt;- function(x) { x %&gt;% head(n = 10) %&gt;% knitr::kable() } 2.2 Most Active on 2017-03-18 event_summary &lt;- get_event_summary(events, country_centroids) show_top10(select(event_summary$nodes, CountryName, EventCount)) CountryName EventCount United States 3 Germany 2 Saudi Arabia 1 show_top10(select(event_summary$edges, CountryA, CountryB, EventCount)) CountryA CountryB EventCount Germany United States of America 1 Saudi Arabia United States of America 1 plot_activity(world_map, event_summary) 2.3 Most Active in Last 7 Days event_summary &lt;- get_event_summary(events, country_centroids, period = 7) ## Warning in countrycode(c(&quot;AFG&quot;, &quot;ALB&quot;, &quot;ARM&quot;, &quot;BEL&quot;, &quot;BEN&quot;, &quot;BLR&quot;, &quot;CAN&quot;, : Some values were not matched unambiguously: PSE, SRB show_top10(select(event_summary$nodes, CountryName, EventCount)) CountryName EventCount United States 303 Turkey 152 Germany 117 Russian Federation 95 Netherlands 83 China 48 United Kingdom 36 Iran, Islamic Republic of 24 Israel 24 Saudi Arabia 21 show_top10(select(event_summary$edges, CountryA, CountryB, EventCount)) CountryA CountryB EventCount Netherlands Turkey 75 Germany United States of America 44 Germany Turkey 41 Russian Federation Turkey 22 China United States of America 18 Russian Federation United States of America 17 Iran (Islamic Republic of) United States of America 14 Israel Russian Federation 12 Palestine, State of United States of America 12 India United States of America 10 plot_activity(world_map, event_summary) 2.4 Most Active in Last 30 Days event_summary &lt;- get_event_summary(events, country_centroids, period = 30) ## Warning in countrycode(c(&quot;AFG&quot;, &quot;ALB&quot;, &quot;ARE&quot;, &quot;ARG&quot;, &quot;ARM&quot;, &quot;AUS&quot;, &quot;AZE&quot;, : Some values were not matched unambiguously: PSE, SRB show_top10(select(event_summary$nodes, CountryName, EventCount)) CountryName EventCount United States 931 Russian Federation 392 Germany 281 Turkey 255 Israel 195 China 122 France 97 Iran, Islamic Republic of 93 Netherlands 93 Korea, Democratic People’s Republic of 85 show_top10(select(event_summary$edges, CountryA, CountryB, EventCount)) CountryA CountryB EventCount Russian Federation United States of America 111 Israel United States of America 104 Germany United States of America 81 Germany Turkey 77 Netherlands Turkey 75 Malaysia Democratic People’s Republic of Korea 57 Israel Russian Federation 47 Russian Federation Turkey 38 Iran (Islamic Republic of) United States of America 37 Philippines United States of America 33 plot_activity(world_map, event_summary) "],
["trump-effect.html", "3 Trump Effect", " 3 Trump Effect "],
["event-table.html", "4 Event Table 4.1 Loading Dataset 4.2 Latest Events", " 4 Event Table library(plyr) library(yaml) library(tidyverse) library(DT) 4.1 Loading Dataset Load Phoenix events. source(&#39;R/phoenix.R&#39;) config &lt;- yaml.load_file(&quot;config.yml&quot;) events &lt;- phoenix_load(config, &quot;2017-01-01&quot;) 4.2 Latest Events Show events reported on 2017-03-18. events %&gt;% filter(Date == max(Date)) %&gt;% DT::datatable(selection = &quot;single&quot;, options = list(scrollX = TRUE)) "]
]
